{"version":3,"sources":["api/service.js","component/Filter.js","component/Pagination.js","component/DataTable.js","fontawesome.js","App.js","serviceWorker.js","index.js"],"names":["API","by","arguments","length","undefined","fetch","concat","then","resp","json","data","catch","err","Error","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewOptions","sortByOptions","closeFilterPanel","bind","assertThisInitialized","setWrapperAroundMe","handleClickOutsideMe","closeState","onCloseFilter","e","console","log","onSortyBy","target","value","onUpdateViewItems","node","wrapperEle","contains","document","addEventListener","removeEventListener","_this2","react_default","a","createElement","className","cssClassname","ref","href","onClick","index_es","icon","onSubmit","htmlFor","id","onChange","handleViewItems","map","option","i","key","handleSortBy","Component","Pagination","state","gotoPageNo","totalRecords","defaultItems","prevCnt","nextCnt","currentPage","handlePrevious","handleNext","handlePage","gotoPage","handlePageInputChange","handlePageInputKeyDown","val","setState","parseFloat","keyCode","_ref","_this$props$onSetNewG","onSetNewGridRecords","f","_this$state","_this$state2","_this$state3","gridData","pagination","_this$state4","type","name","onKeyDown","maxLength","DataTable","dataTableRecords","viewItems","direction","ID","Title","PageCount","PublishDate","setNewGridRecords","sortBy","updateViewItems","clear","replace","sortedData","sort","b","_a$key$split","split","_a$key$split2","slicedToArray","aLast","_a$key$split3","_a$key$split4","bLast","_a$key$split5","_a$key$split6","_a$key$split7","_a$key$split8","toLowerCase","component_Filter","isFilterTrigged","slice","newGridData","component_Pagination","width","item","Description","Date","getFullYear","renderFilter","renderTable","library","add","fab","faCoffee","faCog","faMugHot","faVials","faTimes","faCaretUp","faCaretDown","App","flashOut","heading","title","fetchedData","showFilter","closeFilter","flashHeader","fetchData","res","closedStatus","querySelector","classList","_this3","component_DataTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24a38d9a.chunk.js","sourcesContent":["class API {\r\n    static fetchData(by= 'Books') {\r\n        if (by) {\r\n            const req = fetch(`https://fakerestapi.azurewebsites.net/api/${by}`)\r\n                .then(resp => resp.json()).then(data => {\r\n                   return data ? data: ['no data found!'];\r\n                })\r\n                .catch(err => new Error(err));\r\n            return req\r\n        }\r\n    }\r\n}\r\n\r\nexport default API;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Filter extends Component {\r\n  viewOptions = [5, 10, 15, 20, 30, 40, 'All'];\r\n  sortByOptions = ['Title', 'Description', 'Page Count', 'Date'];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.closeFilterPanel = this.closeFilterPanel.bind(this);\r\n    this.setWrapperAroundMe = this.setWrapperAroundMe.bind(this);\r\n    this.handleClickOutsideMe = this.handleClickOutsideMe.bind(this);\r\n  }\r\n  \r\n  closeFilterPanel(closeState) {\r\n    this.props.onCloseFilter(closeState);\r\n  }\r\n\r\n  handleSortBy(e) {\r\n    console.log(e);\r\n    this.props.onSortyBy(e.target.value);\r\n  }\r\n\r\n  handleViewItems(e) {\r\n    console.log(e);\r\n    this.props.onUpdateViewItems(e.target.value);\r\n  }\r\n\r\n  setWrapperAroundMe(node){\r\n    this.wrapperEle = node;\r\n  }\r\n\r\n  handleClickOutsideMe(e) {\r\n    if(this.wrapperEle && !this.wrapperEle.contains(e.target)){\r\n      this.closeFilterPanel(false);\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('mousedown', this.handleClickOutsideMe);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('mousedown', this.handleClickOutsideMe)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={`filter-panel ${this.props.cssClassname}`} ref={this.setWrapperAroundMe}>\r\n        <a href=\"#\" className=\"close\" onClick={() => {\r\n          this.closeFilterPanel(false)\r\n        }}>\r\n          <FontAwesomeIcon icon=\"times\" /></a>\r\n        <h3>Filter</h3>\r\n\r\n        <form onSubmit={() => false}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"viewItemsControl\">View items</label>\r\n            <select className=\"form-control\" id=\"viewItemsControl\" onChange={(e) => this.handleViewItems(e)}>\r\n              <option>Select</option>\r\n              {\r\n                this.viewOptions.map((option, i) => {\r\n                  return (<option key={i} value={option}>{option}</option>)\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"soryByControl\">Sort By</label>\r\n            <select className=\"form-control\" id=\"soryByControl\" onChange={(e) => this.handleSortBy(e)}>\r\n              <option>Select</option>\r\n              {\r\n                this.sortByOptions.map((option, i) => {\r\n                  return (<option key={i} value={option}>{option}</option>)\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\n\r\nclass Pagination extends Component {\r\n    state = {\r\n        gotoPageNo: '',\r\n        totalRecords: 0,\r\n        defaultItems: 0,\r\n        prevCnt: 0,\r\n        nextCnt: 0,\r\n        currentPage: 1\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handlePrevious = this.handlePrevious.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handlePage = this.handlePage.bind(this);\r\n        this.gotoPage = this.gotoPage.bind(this);\r\n        this.handlePageInputChange = this.handlePageInputChange.bind(this);\r\n        this.handlePageInputKeyDown = this.handlePageInputKeyDown.bind(this);\r\n        \r\n    }\r\n\r\n    handlePageInputChange(e) {\r\n        const val = e.target.value;\r\n        //console.log(val);\r\n        if (val.length)\r\n            this.setState({ gotoPageNo: parseFloat(val) });\r\n        else \r\n            this.setState({ gotoPageNo: '' });\r\n    }\r\n\r\n    handlePageInputKeyDown(e) {\r\n        const keyCode = e.keyCode;\r\n        //console.log(keyCode);\r\n\r\n        if(keyCode === 13) {\r\n            this.gotoPage();\r\n        }\r\n    }\r\n\r\n    handlePage({ prevCnt, nextCnt } = {}) {\r\n        const { onSetNewGridRecords = f => f } = this.props;\r\n        onSetNewGridRecords({prevCnt, nextCnt});\r\n    }\r\n\r\n    gotoPage() {\r\n        //console.log('go to page ');\r\n        const { totalRecords, gotoPageNo, defaultItems, currentPage } = this.state;\r\n\r\n        if (gotoPageNo && gotoPageNo <= (totalRecords/defaultItems)) {\r\n            const prevCnt = (gotoPageNo - 1) * defaultItems;\r\n            const nextCnt =  (gotoPageNo * defaultItems);\r\n\r\n            this.setState({ currentPage: gotoPageNo, prevCnt, nextCnt });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n        } else {\r\n            //console.error('Sorry, no page exists');\r\n        }\r\n    }\r\n\r\n    handlePrevious() {\r\n        //console.clear();\r\n        //console.log('Previous Trigger ');\r\n        let { prevCnt, nextCnt, defaultItems, currentPage } = this.state;\r\n        if (prevCnt > 0) {\r\n            prevCnt = parseFloat(prevCnt) - defaultItems;\r\n            nextCnt = parseFloat(nextCnt) - defaultItems;\r\n            currentPage = currentPage - 1;\r\n            this.setState({ prevCnt, nextCnt, currentPage, gotoPageNo: '' });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n        }\r\n    }\r\n\r\n    handleNext() {\r\n        //console.clear();\r\n        //console.log('Next Trigger ');\r\n        let { prevCnt, nextCnt, defaultItems, currentPage, totalRecords } = this.state;\r\n\r\n        if (nextCnt < totalRecords) {\r\n            prevCnt = parseFloat(prevCnt) + defaultItems;\r\n            nextCnt = parseFloat(prevCnt) + defaultItems;\r\n            currentPage = currentPage + 1;\r\n            this.setState({ prevCnt, nextCnt, currentPage, gotoPageNo: '' });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n\r\n        } else {\r\n            nextCnt = totalRecords;\r\n            this.setState({ nextCnt });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const totalRecords = this.props.gridData.length;\r\n        const pagination = this.state;\r\n       \r\n        pagination.totalRecords = totalRecords;\r\n        pagination.defaultItems = this.props.defaultItems;\r\n\r\n        this.setState({ pagination });\r\n    }\r\n\r\n    render() {\r\n        const { totalRecords, defaultItems, currentPage, prevCnt, nextCnt, gotoPageNo } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"tabular-info clearfix\">\r\n                    <h5 className=\"float-left\"><span>{totalRecords}</span> books in store.</h5>\r\n                    <h6 className=\"float-left\"><span>Page {`${currentPage}/${(totalRecords / defaultItems)}`}</span></h6>\r\n                    <div className=\"float-right col-4\">\r\n                        <div className=\"input-group input-group-sm float-right\">\r\n                            <input type=\"text\" name=\"gotoPageInput\" className=\"form-control goto-input\"\r\n                                value={gotoPageNo}\r\n                                onChange={this.handlePageInputChange}\r\n                                onKeyDown={this.handlePageInputKeyDown}\r\n                                maxLength={5}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={this.gotoPage} name=\"gotoPageButton\" className=\"btn btn-outline-secondary\" type=\"button\">Go</button>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"pagination pagination-sm float-right\">\r\n                            <li className={!prevCnt ? 'page-item disabled' : 'page-item'}>\r\n                                <a className=\"page-link\" href=\"#\" onClick={() => this.handlePrevious()}>Previous</a>\r\n                            </li>\r\n                            <li className={nextCnt === totalRecords ? 'page-item disabled' : 'page-item'}>\r\n                                <a className=\"page-link\" href=\"#\" onClick={() => this.handleNext()}>Next</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Filter from './Filter';\r\nimport Pagination from './Pagination';\r\n\r\nclass DataTable extends Component {\r\n    state = {\r\n        gridData: [],\r\n        dataTableRecords: [],\r\n        totalRecords: 0,\r\n        viewItems: 0,\r\n        direction: {\r\n            ID: 'desc',\r\n            Title: 'desc',\r\n            PageCount: 'desc',\r\n            PublishDate: 'desc',\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setNewGridRecords = this.setNewGridRecords.bind(this);\r\n        this.sortBy = this.sortBy.bind(this);\r\n        this.updateViewItems = this.updateViewItems.bind(this);\r\n    }\r\n\r\n    sortBy(type) {\r\n        console.clear();\r\n\r\n        let key = type !== '' ? type.replace(/ /gi, '') : null;\r\n        if (!key) return;\r\n\r\n        //console.log('sortBy type ', type, 'direction', this.state.direction[type]);\r\n\r\n        const { dataTableRecords, direction } = this.state;\r\n        let sortedData = [];\r\n        switch (key) {\r\n            case 'Title':\r\n                sortedData = (direction && direction[key] === 'asc' ?\r\n                    dataTableRecords.sort((a, b) => {\r\n                        const [aLast, aFirst] = a[key].split(' ');\r\n                        const [bLast, bFirst] = a[key].split(' ');\r\n\r\n                        return aLast > bLast ? 1 : -1;\r\n                    }) : dataTableRecords.sort((a, b) => {\r\n                        const [aLast, aFirst] = a[key].split(' ');\r\n                        const [bLast, bFirst] = a[key].split(' ');\r\n\r\n                        return bLast > aLast ? 1 : -1;\r\n                    }))\r\n\r\n                this.setState({ dataTableRecords: sortedData });\r\n                break;\r\n\r\n            default:\r\n                sortedData = (direction && direction[key] === 'asc' ?\r\n                    dataTableRecords.sort((a, b) => {\r\n                        return a[key] > b[key] ? 1 : -1;\r\n                    }) : dataTableRecords.sort((a, b) => {\r\n                        return b[key] > a[key] ? 1 : -1;\r\n                    }));\r\n                this.setState({ dataTableRecords: sortedData });\r\n                break;\r\n        }\r\n\r\n        direction[key] = direction[key] === 'asc' ? 'desc' : 'asc';\r\n        this.setState({ direction });\r\n\r\n    }\r\n\r\n    updateViewItems(val) {\r\n        if (val && val !== '') {\r\n            if (typeof val !== \"number\" && val.toLowerCase() === 'all') {\r\n                const nextCnt = this.state.totalRecords;\r\n                this.setNewGridRecords({ prevCnt: 0, nextCnt });\r\n                this.setState({ viewItems: nextCnt });\r\n            } else {\r\n                this.setNewGridRecords({ prevCnt: 0, nextCnt: parseFloat(val) });\r\n                this.setState({ viewItems: val });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderFilter() {\r\n        return (\r\n            <Filter\r\n                cssClassname={this.props.isFilterTrigged ? 'active' : ''}\r\n                onCloseFilter={this.props.onCloseFilter}\r\n                onSortyBy={this.sortBy}\r\n                onUpdateViewItems={this.updateViewItems}\r\n            />\r\n\r\n        );\r\n    }\r\n\r\n    setNewGridRecords({ prevCnt, nextCnt }) {\r\n        // //console.log('setNewGridRecords method called ', typeof prevCnt, typeof nextCnt, this.state.gridData);\r\n        //console.log('prevCnt ', prevCnt, 'nxtCnt ', nextCnt);\r\n\r\n        const dataTableRecords = this.state.gridData.slice(prevCnt, nextCnt);\r\n        //console.log(dataTableRecords);\r\n\r\n        if (!dataTableRecords.length) {\r\n            //console.log('You have reached the limit');\r\n            return;\r\n        }\r\n\r\n        this.setState({ dataTableRecords });\r\n\r\n        return dataTableRecords;\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { gridData } = this.props;\r\n        this.setState({ totalRecords: gridData.length, gridData });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNewGridRecords({ prevCnt: 0, nextCnt: this.props.defaultItems, viewItems: this.props.defaultItems });\r\n    }\r\n\r\n    renderTable() {\r\n        const newGridData = this.state.dataTableRecords ? this.state.dataTableRecords : [];\r\n\r\n        if (newGridData.length) {\r\n            const { direction } = this.state;\r\n            return (\r\n                <div>\r\n                    <h2>Books</h2>\r\n                    {this.state.totalRecords ? (\r\n                        <Pagination\r\n                            gridData={this.state.gridData}\r\n                            defaultItems={5}\r\n                            onSetNewGridRecords={this.setNewGridRecords}\r\n                            handlePrevious={this.handlePrevious}\r\n                            handleNext={this.handleNext}\r\n                        />\r\n                    ) : null\r\n                    }\r\n\r\n                    <div className={this.state.viewItems > 5 ? 'grid-table-panel' : ''}>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td width=\"8%\"><a href=\"#\" onClick={() => this.sortBy('ID')}>ID <FontAwesomeIcon icon={direction.ID === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"15%\"><a href=\"#\" onClick={() => this.sortBy('Title')}>Title <FontAwesomeIcon icon={direction.Title === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"40%\">Description</td>\r\n                                    <td width=\"10%\" className=\"text-center\"><a href=\"#\" onClick={() => this.sortBy('PageCount')}>Page Count <FontAwesomeIcon icon={direction.PageCount === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"10%\" className=\"text-right\"><a href=\"#\" onClick={() => this.sortBy('PublishDate')}>Publish Date <FontAwesomeIcon icon={direction.PublishDate === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"12%\" className=\"text-center\">Action</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"grid-table-panel\">\r\n                                {newGridData.map(item => {\r\n                                    return (\r\n                                        <tr key={item.ID}>\r\n                                            <td>{item.ID}</td>\r\n                                            <td>{item.Title}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className=\"text-center\">{item.PageCount}</td>\r\n                                            <td className=\"text-right\">{new Date(item.PublishDate).getFullYear()}</td>\r\n                                            <td>{item.Description}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    {this.renderFilter()}\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTable()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable;\r\n","\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\nimport { faCoffee, faCog, faMugHot, faVials, faTimes, faCaretUp, faCaretDown  } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    fab, \r\n    faCoffee, \r\n    faCog, \r\n    faMugHot,\r\n    faVials,\r\n    faTimes,\r\n    faCaretUp, \r\n    faCaretDown,\r\n);\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport API from './api/service';\r\nimport DataTable from './component/DataTable';\r\nimport './App.css';\r\n\r\nimport './fontawesome';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isFilterTrigged: false,\r\n    flashOut: false,\r\n    heading: {\r\n      title: 'Getting your lab ready!',\r\n      icon: ['fas', 'mug-hot']\r\n    },\r\n    fetchedData: [],\r\n    defaultItems: 5\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.showFilter = this.showFilter.bind(this);\r\n    this.closeFilter = this.closeFilter.bind(this);\r\n    this.flashHeader = this.flashHeader.bind(this);\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    API.fetchData('Books')\r\n      .then((res) => {\r\n\r\n        this.setState({ fetchedData: res });\r\n\r\n        let heading = this.state.heading;\r\n        heading.title = 'Welcome to Code Test Lab!';\r\n        heading.icon = '';\r\n\r\n        if (res) {\r\n          this.flashHeader();\r\n          this.setState({ heading, flashOut: !this.state.flashOut });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  closeFilter(closedStatus) {\r\n    this.setState({ isFilterTrigged: closedStatus })\r\n  }\r\n\r\n  showFilter() {\r\n    this.setState({ isFilterTrigged: !this.state.isFilterTrigged });\r\n  }\r\n\r\n  flashHeader() {\r\n    const body = document.querySelector('body');\r\n    body.classList.add('flash-out');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <h1>\r\n            {this.state.heading.title}  <br />\r\n            {this.state.heading.icon ? (<FontAwesomeIcon icon={this.state.heading.icon} />) : ''}\r\n          </h1>\r\n\r\n          {\r\n            this.state.flashOut && !this.state.isFilterTrigged ? (\r\n              <a href=\"#\" className=\"filter-icon\" onClick={(e) => { this.showFilter(e) }}><FontAwesomeIcon icon=\"cog\" /></a>\r\n            ) : ''\r\n          }\r\n        </header>\r\n\r\n        <div className=\"container-fluid app-body\">\r\n          {this.state.fetchedData.length ? (\r\n              <DataTable \r\n                gridData={this.state.fetchedData}\r\n                defaultItems={this.state.defaultItems}\r\n                isFilterTrigged={this.state.isFilterTrigged}\r\n                onCloseFilter={this.closeFilter}\r\n              />\r\n          ) : 'No data to display!!'}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}