{"version":3,"sources":["api/service.js","component/Filter.js","component/Pagination.js","component/DataTable.js","fontawesome.js","App.js","serviceWorker.js","index.js"],"names":["API","by","arguments","length","undefined","fetch","concat","then","resp","json","data","catch","err","Error","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewOptions","sortByOptions","closeFilterPanel","bind","assertThisInitialized","setWrapperAroundMe","handleClickOutsideMe","closeState","onCloseFilter","e","console","log","onSortyBy","target","value","onUpdateViewItems","node","wrapperEle","contains","document","addEventListener","removeEventListener","_this2","react_default","a","createElement","className","cssClassname","ref","href","onClick","index_es","icon","onSubmit","htmlFor","id","onChange","handleViewItems","map","option","i","key","handleSortBy","Component","Pagination","state","gotoPageNo","totalRecords","defaultItems","prevCnt","nextCnt","currentPage","handlePrevious","handleNext","handlePage","gotoPage","handlePageInputChange","handlePageInputKeyDown","val","setState","parseFloat","keyCode","_ref","_this$props$onSetNewG","onSetNewGridRecords","f","_this$state","_this$state2","_this$state3","gridData","pagination","_this$state4","tabularMsg","type","name","onKeyDown","maxLength","Date","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","FormatDate","date","dateStr","dy","getFullYear","dm","getMonth","dd","getDate","DataTable","editable","dataTableRecords","viewItems","direction","ID","Title","PageCount","PublishDate","setNewGridRecords","sortBy","updateViewItems","edit","delete","clear","replace","sortedData","sort","b","_a$key$split","split","_a$key$split2","slicedToArray","aLast","_a$key$split3","_a$key$split4","bLast","_a$key$split5","_a$key$split6","_a$key$split7","_a$key$split8","toLowerCase","control","controls","text","largeText","button","dropdown","field","curRow","querySelector","Array","from","querySelectorAll","col","idx","refs","children","textContent","innerHTML","allCols","dataset","newControl","createFieldControl","appendChild","findIndex","item","window","confirm","splice","component_Filter","isFilterTrigged","_this3","newGridData","component_Pagination","width","data-editable","Description","DataTable_FormatDate","color","role","renderTable","renderFilter","library","add","fab","faCoffee","faCog","faMugHot","faVials","faTimes","faCaretUp","faCaretDown","faEdit","faTrashAlt","faCheck","App","flashOut","heading","title","fetchedData","showFilter","closeFilter","flashHeader","fetchData","res","closedStatus","classList","component_DataTable","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.502a06e0.chunk.js","sourcesContent":["class API {\r\n    static fetchData(by= 'Books') {\r\n        if (by) {\r\n            const req = fetch(`https://fakerestapi.azurewebsites.net/api/${by}`)\r\n                .then(resp => resp.json()).then(data => {\r\n                   return data ? data: ['no data found!'];\r\n                })\r\n                .catch(err => new Error(err));\r\n            return req\r\n        }\r\n    }\r\n}\r\n\r\nexport default API;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Filter extends Component {\r\n  viewOptions = [5, 10, 15, 20, 30, 40, 'All'];\r\n  sortByOptions = ['Title', 'Description', 'Page Count', 'Date'];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.closeFilterPanel = this.closeFilterPanel.bind(this);\r\n    this.setWrapperAroundMe = this.setWrapperAroundMe.bind(this);\r\n    this.handleClickOutsideMe = this.handleClickOutsideMe.bind(this);\r\n  }\r\n  \r\n  closeFilterPanel(closeState) {\r\n    this.props.onCloseFilter(closeState);\r\n  }\r\n\r\n  handleSortBy(e) {\r\n    console.log(e);\r\n    this.props.onSortyBy(e.target.value);\r\n  }\r\n\r\n  handleViewItems(e) {\r\n    console.log(e);\r\n    this.props.onUpdateViewItems(e.target.value);\r\n  }\r\n\r\n  setWrapperAroundMe(node){\r\n    this.wrapperEle = node;\r\n  }\r\n\r\n  handleClickOutsideMe(e) {\r\n    if(this.wrapperEle && !this.wrapperEle.contains(e.target)){\r\n      this.closeFilterPanel(false);\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('mousedown', this.handleClickOutsideMe);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('mousedown', this.handleClickOutsideMe)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={`filter-panel ${this.props.cssClassname}`} ref={this.setWrapperAroundMe}>\r\n        <a href=\"#\" className=\"close\" onClick={() => {\r\n          this.closeFilterPanel(false)\r\n        }}>\r\n          <FontAwesomeIcon icon=\"times\" /></a>\r\n        <h3>Filter</h3>\r\n\r\n        <form onSubmit={() => false}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"viewItemsControl\">View items</label>\r\n            <select className=\"form-control\" id=\"viewItemsControl\" onChange={(e) => this.handleViewItems(e)}>\r\n              <option>Select</option>\r\n              {\r\n                this.viewOptions.map((option, i) => {\r\n                  return (<option key={i} value={option}>{option}</option>)\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"soryByControl\">Sort By</label>\r\n            <select className=\"form-control\" id=\"soryByControl\" onChange={(e) => this.handleSortBy(e)}>\r\n              <option>Select</option>\r\n              {\r\n                this.sortByOptions.map((option, i) => {\r\n                  return (<option key={i} value={option}>{option}</option>)\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\n\r\nclass Pagination extends Component {\r\n    state = {\r\n        gotoPageNo: '',\r\n        totalRecords: 0,\r\n        defaultItems: 0,\r\n        prevCnt: 0,\r\n        nextCnt: 0,\r\n        currentPage: 1\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handlePrevious = this.handlePrevious.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handlePage = this.handlePage.bind(this);\r\n        this.gotoPage = this.gotoPage.bind(this);\r\n        this.handlePageInputChange = this.handlePageInputChange.bind(this);\r\n        this.handlePageInputKeyDown = this.handlePageInputKeyDown.bind(this);\r\n        \r\n    }\r\n\r\n    handlePageInputChange(e) {\r\n        const val = e.target.value;\r\n        //console.log(val);\r\n        if (val.length)\r\n            this.setState({ gotoPageNo: parseFloat(val) });\r\n        else \r\n            this.setState({ gotoPageNo: '' });\r\n    }\r\n\r\n    handlePageInputKeyDown(e) {\r\n        const keyCode = e.keyCode;\r\n        //console.log(keyCode);\r\n\r\n        if(keyCode === 13) {\r\n            this.gotoPage();\r\n        }\r\n    }\r\n\r\n    handlePage({ prevCnt, nextCnt } = {}) {\r\n        const { onSetNewGridRecords = f => f } = this.props;\r\n        onSetNewGridRecords({prevCnt, nextCnt});\r\n    }\r\n\r\n    gotoPage() {\r\n        //console.log('go to page ');\r\n        const { totalRecords, gotoPageNo, defaultItems, currentPage } = this.state;\r\n\r\n        if (gotoPageNo && gotoPageNo <= (totalRecords/defaultItems)) {\r\n            const prevCnt = (gotoPageNo - 1) * defaultItems;\r\n            const nextCnt =  (gotoPageNo * defaultItems);\r\n\r\n            this.setState({ currentPage: gotoPageNo, prevCnt, nextCnt });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n        } else {\r\n            //console.error('Sorry, no page exists');\r\n        }\r\n    }\r\n\r\n    handlePrevious() {\r\n        //console.clear();\r\n        //console.log('Previous Trigger ');\r\n        let { prevCnt, nextCnt, defaultItems, currentPage } = this.state;\r\n        if (prevCnt > 0) {\r\n            prevCnt = parseFloat(prevCnt) - defaultItems;\r\n            nextCnt = parseFloat(nextCnt) - defaultItems;\r\n            currentPage = currentPage - 1;\r\n            this.setState({ prevCnt, nextCnt, currentPage, gotoPageNo: '' });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n        }\r\n    }\r\n\r\n    handleNext() {\r\n        //console.clear();\r\n        //console.log('Next Trigger ');\r\n        let { prevCnt, nextCnt, defaultItems, currentPage, totalRecords } = this.state;\r\n\r\n        if (nextCnt < totalRecords) {\r\n            prevCnt = parseFloat(prevCnt) + defaultItems;\r\n            nextCnt = parseFloat(prevCnt) + defaultItems;\r\n            currentPage = currentPage + 1;\r\n            this.setState({ prevCnt, nextCnt, currentPage, gotoPageNo: '' });\r\n            this.handlePage({ prevCnt, nextCnt });\r\n\r\n        } else {\r\n            nextCnt = totalRecords;\r\n            this.setState({ nextCnt });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const totalRecords = this.props.gridData.length;\r\n        const pagination = this.state;\r\n       \r\n        pagination.totalRecords = totalRecords;\r\n        pagination.defaultItems = this.props.defaultItems;\r\n\r\n        this.setState({ pagination });\r\n    }\r\n\r\n    render() {\r\n        const { totalRecords, defaultItems, currentPage, prevCnt, nextCnt, gotoPageNo } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"tabular-info clearfix\">\r\n                    <h5 className=\"float-left\"><span>{totalRecords}</span> {this.props.tabularMsg}</h5>\r\n                    <h6 className=\"float-left\"><span>Page {`${currentPage}/${(totalRecords / defaultItems)}`}</span></h6>\r\n                    <div className=\"float-right col-4\">\r\n                        <div className=\"input-group input-group-sm float-right\">\r\n                            <input type=\"text\" name=\"gotoPageInput\" className=\"form-control goto-input\"\r\n                                value={gotoPageNo}\r\n                                onChange={this.handlePageInputChange}\r\n                                onKeyDown={this.handlePageInputKeyDown}\r\n                                maxLength={5}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={this.gotoPage} name=\"gotoPageButton\" className=\"btn btn-outline-secondary\" type=\"button\">Go</button>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"pagination pagination-sm float-right\">\r\n                            <li className={!prevCnt ? 'page-item disabled' : 'page-item'}>\r\n                                <a className=\"page-link\" href=\"#\" onClick={() => this.handlePrevious()}>Previous</a>\r\n                            </li>\r\n                            <li className={nextCnt === totalRecords ? 'page-item disabled' : 'page-item'}>\r\n                                <a className=\"page-link\" href=\"#\" onClick={() => this.handleNext()}>Next</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Filter from './Filter';\r\nimport Pagination from './Pagination';\r\n\r\nDate.prototype.toDateInputValue = (function () {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n});\r\n\r\nclass FormatDate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.date) return 'no-date';\r\n        const dateStr = new Date(this.props.date);\r\n        const dy = dateStr.getFullYear();\r\n        const dm = dateStr.getMonth();\r\n        const dd = dateStr.getDate();\r\n        const format = `${dd}-${dm + 1}-${dy}`;\r\n        return (format);\r\n    }\r\n\r\n};\r\n\r\nclass DataTable extends Component {\r\n\r\n    state = {\r\n        editable: false,\r\n        gridData: [],\r\n        dataTableRecords: [],\r\n        totalRecords: 0,\r\n        viewItems: 0,\r\n        direction: {\r\n            ID: 'desc',\r\n            Title: 'desc',\r\n            PageCount: 'desc',\r\n            PublishDate: 'desc',\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setNewGridRecords = this.setNewGridRecords.bind(this);\r\n        this.sortBy = this.sortBy.bind(this);\r\n        this.updateViewItems = this.updateViewItems.bind(this);\r\n        this.edit = this.edit.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    sortBy(type) {\r\n        console.clear();\r\n\r\n        let key = type !== '' ? type.replace(/ /gi, '') : null;\r\n        if (!key) return;\r\n\r\n        //console.log('sortBy type ', type, 'direction', this.state.direction[type]);\r\n\r\n        const { dataTableRecords, direction } = this.state;\r\n        let sortedData = [];\r\n        switch (key) {\r\n            case 'Title':\r\n                sortedData = (direction && direction[key] === 'asc' ?\r\n                    dataTableRecords.sort((a, b) => {\r\n                        const [aLast, aFirst] = a[key].split(' ');\r\n                        const [bLast, bFirst] = a[key].split(' ');\r\n\r\n                        return aLast > bLast ? 1 : -1;\r\n                    }) : dataTableRecords.sort((a, b) => {\r\n                        const [aLast, aFirst] = a[key].split(' ');\r\n                        const [bLast, bFirst] = a[key].split(' ');\r\n\r\n                        return bLast > aLast ? 1 : -1;\r\n                    }))\r\n\r\n                this.setState({ dataTableRecords: sortedData });\r\n                break;\r\n\r\n            default:\r\n                sortedData = (direction && direction[key] === 'asc' ?\r\n                    dataTableRecords.sort((a, b) => {\r\n                        return a[key] > b[key] ? 1 : -1;\r\n                    }) : dataTableRecords.sort((a, b) => {\r\n                        return b[key] > a[key] ? 1 : -1;\r\n                    }));\r\n                this.setState({ dataTableRecords: sortedData });\r\n                break;\r\n        }\r\n\r\n        direction[key] = direction[key] === 'asc' ? 'desc' : 'asc';\r\n        this.setState({ direction });\r\n\r\n    }\r\n\r\n    updateViewItems(val) {\r\n        if (val && val !== '') {\r\n            if (typeof val !== \"number\" && val.toLowerCase() === 'all') {\r\n                const nextCnt = this.state.totalRecords;\r\n                this.setNewGridRecords({ prevCnt: 0, nextCnt });\r\n                this.setState({ viewItems: nextCnt });\r\n            } else {\r\n                this.setNewGridRecords({ prevCnt: 0, nextCnt: parseFloat(val) });\r\n                this.setState({ viewItems: val });\r\n            }\r\n        }\r\n    }\r\n\r\n    createFieldControl(control, id) {\r\n        const controls = {\r\n            text: 'input',\r\n            largeText: 'textarea',\r\n            date: 'input',\r\n            button: 'button',\r\n            dropdown: 'select'\r\n        };\r\n\r\n        if (control && controls[control]) {\r\n            let field = document.createElement(controls[control]);\r\n            field.name = `${controls[control]}${id}`;\r\n            field.id = `${controls[control]}${id}`;\r\n            field.className = `form-control`;\r\n            if (control === 'date') {\r\n                field.type = 'date';\r\n            }\r\n            return field;\r\n        }\r\n    }\r\n\r\n    save(id) {\r\n        console.log('We are saving following item id ', id);\r\n    }\r\n\r\n    edit(id) {\r\n        if (id) {\r\n            // console.log(#toggleEditAction);\r\n\r\n            this.setState({ editable: !this.state.editable });\r\n\r\n            if (!this.state.editable) {\r\n                //on edit\r\n                const curRow = document.querySelector(`.dtrow${id}`);\r\n                if (!curRow) return;\r\n\r\n                const allCols = Array.from(curRow.querySelectorAll('td[data-editable]'));\r\n                const editRef = this.refs[`editRef${id}`];\r\n\r\n                allCols.map((col, idx) => {\r\n                    const control = col.dataset.editable;\r\n                    const newControl = this.createFieldControl(control, idx);\r\n                    newControl.value = control === 'date' ? new Date(col.textContent).toDateInputValue() : col.textContent;\r\n                    col.innerHTML = '';\r\n                    col.appendChild(newControl);\r\n                });\r\n\r\n                // ReactDOM.render(<FontAwesomeIcon icon=\"edit\" color=\"blue\" />, editRef);\r\n\r\n\r\n            } else {\r\n                //on save\r\n                const curRow = document.querySelector(`.dtrow${id}`);\r\n                if (!curRow) return;\r\n\r\n                const allCols = Array.from(curRow.querySelectorAll('td[data-editable]'));\r\n\r\n                allCols.map((col, idx) => {\r\n                    const editRef = this.refs[`editRef${id}`];\r\n                    const text = col.children[0].value || col.children[0].textContent;\r\n                    col.innerHTML = text;\r\n\r\n                    // ReactDOM.render(<FontAwesomeIcon icon=\"check\" color=\"green\" />, editRef);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    delete(id) {\r\n        if (id) {\r\n            const { dataTableRecords } = this.state;\r\n            const idx = dataTableRecords.findIndex(item => id === item.ID);\r\n            const confirm = window.confirm('Are you sure want to delete?');\r\n\r\n            if (confirm) {\r\n                dataTableRecords.splice(idx, 1);\r\n                this.setState({ dataTableRecords });\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    setNewGridRecords({ prevCnt, nextCnt }) {\r\n        // //console.log('setNewGridRecords method called ', typeof prevCnt, typeof nextCnt, this.state.gridData);\r\n        //console.log('prevCnt ', prevCnt, 'nxtCnt ', nextCnt);\r\n\r\n        const dataTableRecords = this.state.gridData.slice(prevCnt, nextCnt);\r\n        //console.log(dataTableRecords);\r\n\r\n        if (!dataTableRecords.length) {\r\n            //console.log('You have reached the limit');\r\n            return;\r\n        }\r\n\r\n        this.setState({ dataTableRecords });\r\n\r\n        return dataTableRecords;\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { gridData } = this.props;\r\n        this.setState({ totalRecords: gridData.length, gridData });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNewGridRecords({ prevCnt: 0, nextCnt: this.props.defaultItems, viewItems: this.props.defaultItems });\r\n    }\r\n\r\n    renderFilter() {\r\n        return (\r\n            <Filter\r\n                cssClassname={this.props.isFilterTrigged ? 'active' : ''}\r\n                onCloseFilter={this.props.onCloseFilter}\r\n                onSortyBy={this.sortBy}\r\n                onUpdateViewItems={this.updateViewItems}\r\n            />\r\n\r\n        );\r\n    }\r\n\r\n    renderTable() {\r\n        const newGridData = this.state.dataTableRecords ? this.state.dataTableRecords : [];\r\n\r\n        if (newGridData.length) {\r\n            const { direction, editable } = this.state;\r\n            return (\r\n                <div>\r\n                    {this.state.totalRecords ? (\r\n                        <Pagination\r\n                            gridData={this.state.gridData}\r\n                            defaultItems={5}\r\n                            onSetNewGridRecords={this.setNewGridRecords}\r\n                            handlePrevious={this.handlePrevious}\r\n                            handleNext={this.handleNext}\r\n                            tabularMsg=\"books in store.\"\r\n                        />\r\n                    ) : null\r\n                    }\r\n\r\n                    <div className={this.state.viewItems > 5 ? 'grid-table-panel' : ''}>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td width=\"8%\"><a href=\"#\" onClick={() => this.sortBy('ID')}>ID <FontAwesomeIcon icon={direction.ID === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"15%\"><a href=\"#\" onClick={() => this.sortBy('Title')}>Title <FontAwesomeIcon icon={direction.Title === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"40%\">Description</td>\r\n                                    <td width=\"10%\" className=\"text-center\"><a href=\"#\" onClick={() => this.sortBy('PageCount')}>Page Count <FontAwesomeIcon icon={direction.PageCount === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"10%\" className=\"text-right\"><a href=\"#\" onClick={() => this.sortBy('PublishDate')}>Publish Date <FontAwesomeIcon icon={direction.PublishDate === 'asc' ? 'caret-up' : 'caret-down'} /></a></td>\r\n                                    <td width=\"12%\" className=\"text-center\">Action</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"grid-table-panel\">\r\n                                {newGridData.map(item => {\r\n                                    return (\r\n                                        <tr key={item.ID} className={`dtrow${item.ID}`}>\r\n                                            <td>{item.ID}</td>\r\n                                            <td data-editable=\"text\">{item.Title}</td>\r\n                                            <td data-editable=\"largeText\">{item.Description}</td>\r\n                                            <td data-editable=\"text\" className=\"text-center\">{item.PageCount}</td>\r\n                                            <td data-editable=\"date\" className=\"text-right\">{(<FormatDate date={item.PublishDate} />)}</td>\r\n                                            <td className=\"text-center\">\r\n                                                <a href=\"#\" onClick={(e) => this.edit(item.ID)} ref={`editRef${item.ID}`}><FontAwesomeIcon icon=\"edit\" color=\"\" /></a>\r\n                                                &nbsp;|&nbsp;\r\n                                                <a href=\"#\" onClick={(e) => this.delete(item.ID)}><FontAwesomeIcon icon=\"trash-alt\" color=\"#cc0000\" /></a>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div className=\"alert alert-warning text-center\" role=\"alert\">Currently no records to show.</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTable()}\r\n                {this.renderFilter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable;\r\n","\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\nimport { \r\n    faCoffee, faCog, faMugHot, \r\n    faVials, faTimes, faCaretUp,\r\n    faCaretDown, faEdit, faTrashAlt, faCheck  } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    fab, \r\n    faCoffee, \r\n    faCog, \r\n    faMugHot,\r\n    faVials,\r\n    faTimes,\r\n    faCaretUp, \r\n    faCaretDown,\r\n    faEdit, \r\n    faTrashAlt,\r\n    faCheck\r\n);\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport API from './api/service';\r\nimport DataTable from './component/DataTable';\r\nimport './App.css';\r\n\r\nimport './fontawesome';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isFilterTrigged: false,\r\n    flashOut: false,\r\n    heading: {\r\n      title: 'Getting lab ready!!!',\r\n      icon: ['fas', 'mug-hot']\r\n    },\r\n    fetchedData: [],\r\n    defaultItems: 5\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.showFilter = this.showFilter.bind(this);\r\n    this.closeFilter = this.closeFilter.bind(this);\r\n    this.flashHeader = this.flashHeader.bind(this);\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    API.fetchData('Books')\r\n      .then((res) => {\r\n\r\n        this.setState({ fetchedData: res });\r\n\r\n        let heading = this.state.heading;\r\n        heading.title = 'Welcome to Code Test Lab!';\r\n        heading.icon = '';\r\n\r\n        if (res) {\r\n          this.flashHeader();\r\n          this.setState({ heading, flashOut: !this.state.flashOut });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  closeFilter(closedStatus) {\r\n    this.setState({ isFilterTrigged: closedStatus })\r\n  }\r\n\r\n  showFilter() {\r\n    this.setState({ isFilterTrigged: !this.state.isFilterTrigged });\r\n  }\r\n\r\n  flashHeader() {\r\n    const body = document.querySelector('body');\r\n    body.classList.add('flash-out');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <h1>\r\n            {this.state.heading.title}  <br />\r\n            {this.state.heading.icon ? (<FontAwesomeIcon icon={this.state.heading.icon} />) : ''}\r\n          </h1>\r\n\r\n          {\r\n            this.state.flashOut && !this.state.isFilterTrigged ? (\r\n              <a href=\"#\" className=\"filter-icon\" onClick={(e) => { this.showFilter(e) }}><FontAwesomeIcon icon=\"cog\" /></a>\r\n            ) : ''\r\n          }\r\n        </header>\r\n\r\n        <div className=\"container-fluid app-body\">\r\n          {this.state.fetchedData.length ? (\r\n            <div>\r\n              <h2>Books</h2>\r\n              <DataTable\r\n                gridData={this.state.fetchedData}\r\n                defaultItems={this.state.defaultItems}\r\n                isFilterTrigged={this.state.isFilterTrigged}\r\n                onCloseFilter={this.closeFilter}\r\n              />\r\n            </div>\r\n          ) : (\r\n              <div>\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">Oops, no records fetched.</div>\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}